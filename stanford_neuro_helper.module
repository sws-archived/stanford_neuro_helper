<?php

/**
* Implements hook_views_api().
*
* Enabling using templates inside module
*/
function stanford_neuro_helper_views_api() {
  return array(
    'api' => 3,
    'path' => drupal_get_path('module', 'NAME'),
    'template path' => drupal_get_path('module', 'stanford_neuro_helper') . '/templates',
  );
}

/**
 * Implements hook_libraries_info().
 */
function stanford_neuro_helper_libraries_info() {
  $libraries = array();
  $libraries['isotope'] = array(
    'name' => 'Isotope',
    'vendor url' => 'http://isotope.metafizzy.co/',
    'download url' => 'http://isotope.metafizzy.co/',
    'version callback' => 'short_circuit_version',
    'files' => array(
      'js' => array(
        'isotope.pkgd.min.js',
      ),
    ),
  );

  return $libraries;
}

/**
* Short-circuit the version argument.
*/
function short_circuit_version() {
  return TRUE;
}

/**
 * Implements hook_preprocess_views_view().
 */
function stanford_neuro_helper_preprocess_views_view(&$vars) {
  if ($vars['view']->name == 'neuro_research_emphasis') {
    libraries_load('isotope');
    drupal_add_js(drupal_get_path('module', 'stanford_neuro_helper') .'/js/imagesloaded.pkgd.min.js', 'file');
    drupal_add_js(drupal_get_path('module', 'stanford_neuro_helper') .'/js/emphasis_isotope.js', 'file');
  }
}

/**
 * Implements hook_feeds_after_save().
 */
function stanford_neuro_helper_feeds_after_save(FeedsSource $source, $entity, $item, $entity_id) {
  include_once dirname(__FILE__) . "/includes/simple_html_dom.php";

  // Create new simplehtmldom object.
  $html = new simple_html_dom();
  // Parse body field markup.
  $html->load($item['description']);
  // Find each image in the body markup.
  $imgs = $html->find(‘img’);
  foreach ($imgs as $img) {
    $url_parts = parse_url($img->src);
    // No host means the path is relative, i.e. the image is
    // hosted locally.
    $no_host = !isset($url_parts['host']);
    // Somehow raw image data ended up in some of this content, we
    // don’t want that.
    $not_data = !(isset($url_parts[‘scheme’]) && $url_parts[‘scheme’] == ‘data’);
    if ($no_host && $not_data) {
      $path = $url_parts['path'];
      $path_parts = explode('/', $path);
      // The leading slash results in an extra empty path element
      // at the front of the array, lose it.
      array_shift($path_parts);
      // Decode encoded characters in the filename so the filename
      // doesn't get double-encoded on save.
      $filename = urldecode(array_pop($path_parts));
      // Join the path back together and lop off the
      // sites/default/files bit,leaving the directory under the
      // public schema.
      $filepath = str_replace('sites/default/files/', '', implode('/', $path_parts));
      // The image we want is at the original full path under the
      // domain we’re migrating from.
      $img_url = 'https://neuroscience.stanford.edu' . $path;
      // Build a stream wrapper for the destination directory.
      $uri = file_build_uri($filepath);
      // Ensure destination directory exists and is writeable.
      if (file_prepare_directory($uri, FILE_CREATE_DIRECTORY)) {
        $destination = $uri . '/' . $filename;
        // Retrieve image.
        system_retrieve_file($img_url, $destination, TRUE, FILE_EXISTS_REPLACE);
      }  // end if
    }  // end if
  }  // end foreach
}  // end my_module_feeds_after_save
